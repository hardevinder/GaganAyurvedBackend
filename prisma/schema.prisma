generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

/// =========================
/// üìù BLOG
/// =========================
model Blog {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

/// =========================
/// üè∑Ô∏è CATEGORY
/// =========================
model Category {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  slug        String    @unique
  description String?
  products    Product[]
}

/// =========================
/// üõçÔ∏è PRODUCT CATALOG
/// =========================
model Product {
  id          Int            @id @default(autoincrement())
  name        String
  description String
  imageUrl    String?
  createdAt   DateTime       @default(now())
  categoryId  Int?
  updatedAt   DateTime       @updatedAt
  slug        String         @unique
  brand       String?
  isActive    Boolean        @default(true)
  metaDesc    String?
  metaTitle   String?
  summary     String?
  category    Category?      @relation(fields: [categoryId], references: [id])
  images      ProductImage[]
  variants    Variant[]

  @@index([categoryId])
  @@index([isActive])
}

model ProductImage {
  id        Int      @id @default(autoincrement())
  productId Int
  url       String
  alt       String?
  position  Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product   Product  @relation(fields: [productId], references: [id])

  @@index([productId])
}

/// =========================
/// üé® VARIANT
/// =========================
model Variant {
  id          Int         @id @default(autoincrement())
  productId   Int
  name        String
  price       Decimal     @db.Decimal(10, 2)
  stock       Int?
  sku         String?     @unique
  updatedAt   DateTime    @updatedAt
  createdAt   DateTime    @default(now())
  mrp         Decimal?    @db.Decimal(10, 2)
  salePrice   Decimal?    @db.Decimal(10, 2)
  weightGrams Int?
  cartItems   CartItem[]
  orderItems  OrderItem[]
  product     Product     @relation(fields: [productId], references: [id])

  @@index([productId])
}

/// =========================
/// üë§ USER & ADDRESS
/// =========================
model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String?
  isAdmin   Boolean   @default(false)
  provider  String    @default("credentials")
  avatar    String?
  updatedAt DateTime  @updatedAt
  createdAt DateTime  @default(now())
  phone     String?
  addresses Address[]
  carts     Cart[]
  orders    Order[]

  @@index([provider])
}

model Address {
  id         Int      @id @default(autoincrement())
  userId     Int
  name       String
  phone      String
  line1      String
  line2      String?
  city       String
  state      String
  postalCode String
  country    String   @default("IN")
  isDefault  Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id])

  @@index([userId])
}

/// =========================
/// üõí CART & CART ITEMS
/// =========================
model Cart {
  id        Int        @id @default(autoincrement())
  userId    Int?
  sessionId String?    @unique
  expiresAt DateTime?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  user      User?      @relation(fields: [userId], references: [id])
  items     CartItem[]

  @@index([userId])
  @@index([sessionId])
}

model CartItem {
  id        Int      @id @default(autoincrement())
  cartId    Int
  variantId Int
  quantity  Int
  price     Decimal  @db.Decimal(10, 2)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cart      Cart     @relation(fields: [cartId], references: [id])
  variant   Variant  @relation(fields: [variantId], references: [id])

  @@index([cartId])
  @@index([variantId])
}

/// =========================
/// üì¶ ORDER & ORDER ITEMS
/// =========================
model Order {
  id               Int         @id @default(autoincrement())
  userId           Int?
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  cartId           Int?
  customerEmail    String
  customerName     String
  customerPhone    String?
  discount         Decimal?    @db.Decimal(12, 2)
  grandTotal       Decimal     @db.Decimal(12, 2)
  guestAccessToken String?
  invoicePdfPath   String?
  orderNumber      String      @unique
  paymentMethod    String
  paymentStatus    String      @default("pending")

  // NEW: order lifecycle and shipping fields
  orderStatus      String      @default("pending")
  trackingNumber   String?
  shippedAt        DateTime?

  shipping         Decimal?    @db.Decimal(12, 2)
  shippingAddress  Json
  subtotal         Decimal     @db.Decimal(12, 2)
  tax              Decimal?    @db.Decimal(12, 2)
  user             User?       @relation(fields: [userId], references: [id])
  items            OrderItem[]

  @@index([userId])
  @@index([guestAccessToken])
  @@index([orderNumber])
  @@index([orderStatus])
  @@index([paymentStatus])
}

model OrderItem {
  id          Int      @id @default(autoincrement())
  orderId     Int
  variantId   Int?
  quantity    Int
  price       Decimal  @db.Decimal(12, 2)
  updatedAt   DateTime @updatedAt
  createdAt   DateTime @default(now())
  productName String
  sku         String?
  total       Decimal  @db.Decimal(12, 2)
  order       Order    @relation(fields: [orderId], references: [id])
  variant     Variant? @relation(fields: [variantId], references: [id])

  @@index([orderId])
  @@index([variantId])
}

/// =========================
/// üöö SHIPPING RULES (NEW)
/// =========================
model ShippingRule {
  id            Int      @id @default(autoincrement())
  name          String?
  pincodeFrom   Int
  pincodeTo     Int
  charge        Decimal  @db.Decimal(10, 2)
  minOrderValue Decimal? @db.Decimal(12, 2)
  priority      Int      @default(0)
  isActive      Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([pincodeFrom, pincodeTo])
  @@index([isActive, priority])
}
